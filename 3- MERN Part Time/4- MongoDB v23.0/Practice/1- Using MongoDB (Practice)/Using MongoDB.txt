Using MongoDB :

1 - Create a database called 'my_first_db'

use my_first_db

2 - Create students collection

db.createCollection('students')

3 - Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})

4 - Create 5 students with the appropriate info

db.students.insertMany([
  { name: "John", home_state: "California", lucky_number: 7, birthday: { month: 4, day: 15, year: 2000 } },
  { name: "Alice", home_state: "Washington", lucky_number: 5, birthday: { month: 9, day: 3, year: 1998 } },
  { name: "Michael", home_state: "Texas", lucky_number: 3, birthday: { month: 6, day: 10, year: 1995 } },
  { name: "Emily", home_state: "Florida", lucky_number: 9, birthday: { month: 1, day: 20, year: 2001 } },
  { name: "David", home_state: "New York", lucky_number: 12, birthday: { month: 11, day: 5, year: 1997 } }
])

5 - Get all students

db.students.find()

6 - Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo)

db.students.find({ $or: [{ home_state: "California" }, { home_state: "Washington" }] })

7 - Get all students whose lucky number is greater than 3

db.students.find({ lucky_number: { $gt: 3 } })

8 - Add a field to each student collection called 'interests' that is an ARRAY. It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation

db.students.updateMany({}, { $set: { interests: ["coding", "brunch", "MongoDB"] } })

9 - Add some unique interests for each particular student into each of their interest arrays

db.students.updateOne({ name: "John" }, { $addToSet: { interests: "hiking" } })
db.students.updateOne({ name: "Alice" }, { $addToSet: { interests: "reading" } })
db.students.updateOne({ name: "Michael" }, { $addToSet: { interests: "swimming" } })
db.students.updateOne({ name: "Emily" }, { $addToSet: { interests: "painting" } })
db.students.updateOne({ name: "David" }, { $addToSet: { interests: "music" } })

10 - Add the interest 'taxes' into someone's interest array

db.students.updateOne({ name: "John" }, { $addToSet: { interests: "taxes" } })

11 - Remove the 'taxes' interest you just added

db.students.updateOne({ name: "John" }, { $pull: { interests: "taxes" } })

12 - Remove all students who are from California

db.students.deleteMany({ home_state: "California" })

13 - Remove a student by name

db.students.deleteOne({ name: "Alice" })

14 - Remove a student whose lucky number is greater than 5 (JUST ONE)

db.students.deleteOne({ lucky_number: { $gt: 5 } })

15 - Add a field to each student collection called 'number_of_belts' and set it to 0.

db.students.updateMany({}, { $set: { number_of_belts: 0 } })

16 - Increment this field by 1 for all students in Washington (Seattle Dojo)

db.students.updateMany({ home_state: "Washington" }, { $inc: { number_of_belts: 1 } })

17 - Add a 'updated_on' field, and set the value as the current date

db.students.updateMany({}, { $set: { updated_on: new Date() } })

